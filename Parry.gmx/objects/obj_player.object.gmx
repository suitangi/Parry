<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveSpeed = 10;
baseAccel = 1.5;
accelAmount = 0;
accel = false;

left = false;;
right = false;
up = false;
down = false;

dashing = false;
dashCD = .5;
dashable = true;
dashAccel = false;
dashBaseDeccel = 2;
dashBaseAccel = 3;
dashAccelAmount = 0;
dashSpeed = 30;

image_speed = 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dashable = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_player</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>right = keyboard_check(obj_controller.keyRight);
up = keyboard_check(obj_controller.keyUp);
left = keyboard_check(obj_controller.keyLeft);
down = keyboard_check(obj_controller.keyDown);

if (dashable &amp;&amp; keyboard_check(vk_shift)) {
    show_debug_message('test');
    dashing = true;
    dashAccel = true;
    //direction = point_direction(x, y, mouse_x, mouse_y);
    dashable = false;
    alarm[0] = dashCD * room_speed;
    dashAccelAmount = 0;
    //obj_camera.shake = 6;
}

accel = false;
if (!dashing) {
    if (right) {
        image_xscale = -1;
        accel = true;
        if (up &amp;&amp; !down) {
            direction = 45;
        } else if (down &amp;&amp; !up) {
            direction = -45;
        } else if (left) {
            accel = false;
        } else {
            direction = 0;
        }
    } else if (left) {
        image_xscale = 1;
        accel = true;
        if (up &amp;&amp; !down) {
            direction = 135;
        } else if (down &amp;&amp; !up) {
            direction = -135;
        } else if (right) {
            accel = false;
        } else {
            direction = 180;
        }
    } else if (up) {
        accel = true;
        direction = 90;
        if (down) {
            accel = false;
        }
    } else if (down) {
        accel = true;
        direction = 270;
    }
    
    if (accel) {
        if (sprite_index != spr_playerWalk)
            sprite_index = spr_playerWalk;
        if (speed &lt; moveSpeed) {
            accelAmount += baseAccel;
            speed += accelAmount;
        } else {
            speed = moveSpeed;
        }
    } else {
        if (sprite_index != spr_playerIdle)
                sprite_index = spr_playerIdle;
        if (speed &gt; 0) {
            speed -= accelAmount;
            if (accelAmount &lt;= 0)
                accelAmount = 0.3;
            accelAmount -= baseAccel;
            if (speed &lt; 0) {
                speed = 0;
            }
        } else {
            speed = 0;
        }
    }
    
    if (speed &gt; moveSpeed)
        speed = moveSpeed;
    
} else {
    if (dashAccel) {
        if (speed &lt; dashSpeed) {
            dashAccelAmount += dashBaseAccel;
            speed += dashAccelAmount;
        } else {
            speed = dashSpeed;
            dashAccel = false;
        }
    } else {
        if (speed &gt; moveSpeed) {
            speed -= dashAccelAmount;
            if (dashAccelAmount &lt;= 0)
                dashAccelAmount = 0.3;
            dashAccelAmount -= dashBaseDeccel;
            if (speed &lt; moveSpeed) {
                speed = moveSpeed;
                dashing = false;
                accelAmount = moveSpeed / 2;
            }
        } else {
            speed = moveSpeed;
            dashing = false;
            accelAmount = moveSpeed / 2;
        }
    }
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
